name: "Run Acceptance tests & Publish results"
description: "Run Acceptance tests with SerenityJS & Publish results to Netlify"

inputs:
  NAME:
    description: "Functional group or block"
    default: acceptance-tests
    required: false
  ENVIRONMENT_NAME:
    description: "Name of the environment where tests will run"
    required: true
  TESTS_SRC_DIR:
    description: "Directory where the tests src is"
    required: false
    default: './acceptance'
  TESTS_COMMAND:
    description: 'command to run tests. For example npm run test-ci'
    required: false
    default: 'npm test'
  RELEASE_CODENAME:
    description: 'Codename for release'
    required: false
    default: 'ci'
  NETLIFY_AUTH_TOKEN:
    description: "Netlify's PAT"
    required: true
  NETLIFY_SITE_ID:
    description: "API ID from your site in Netlify"
    required: true
  SLACK_WEBHOOK_QA:
    description: "Slack's webhook"
    required: false
  CUSTOM_IMAGE:
    description: "Addtional image for Slack's notification"
    required: false
    default: 'https://cdn-icons-png.flaticon.com/512/1581/1581884.png' #<a href="https://www.flaticon.es/iconos-gratis/examen" title="examen iconos">Examen iconos creados por Freepik - Flaticon</a>
    
#TODO: since continue-on-error is not supported on composite actions, lines using it are commented
runs:
  using: "composite"
  steps:

    - name: Setup Node.js environment
      uses: actions/setup-node@v3
      with:
        node-version: "14"

    - name: Setting up cache
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install project dependencies
      working-directory: ${{ inputs.TESTS_SRC_DIR }}
      run: npm ci
      shell: bash

    # Commented because there is no chromedriver in aws linux box
    # - name: print Chrome details
    #   run: google-chrome --version && chromedriver --version
    #   shell: bash
    #   continue-on-error: true

    - name: Run tests
      id: acceptance-tests
      working-directory: ${{ inputs.TESTS_SRC_DIR }}
      run: echo "TESTS_STATUS=success" >> $GITHUB_ENV && export NODE_ENV=${{ inputs.ENVIRONMENT_NAME }} && ${{ inputs.TESTS_COMMAND }} || echo "TESTS_STATUS=failure" >> $GITHUB_ENV
      shell: bash
      #continue-on-error: true

    - name: Upload Test results 
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: "test-results-${{ inputs.NAME }}"
        path: |
          ./acceptance/target/*.xml
          ./acceptance/target/site/serenity/*.png
          ./acceptance/target/site/serenity/*.json

    - name: Deploy to Netlify
      id: publish-report
      uses: nwtgck/actions-netlify@v1.2.3
      if: always() && hashFiles('acceptance/target/site/serenity/summary.txt') != ''
      with:
        publish-dir: "./acceptance/target/site/serenity/"
        #production-branch: master #we will use deploy-preview approach
        deploy-message: Deploy Serenity reports for ${{ inputs.RELEASE_CODENAME }} release
        enable-pull-request-comment: false
        github-deployment-environment: ${{ inputs.ENVIRONMENT_NAME }}
        alias: deploy-preview-${{ inputs.RELEASE_CODENAME }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ inputs.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ inputs.NETLIFY_SITE_ID }}

########### Optional Slack notification
    - name: Read tests summary
      id: tests-summary
      if: ${{ inputs.SLACK_WEBHOOK_QA }}!='' && hashFiles('acceptance/target/site/serenity/summary.txt') != '' && always()
      uses: andstor/file-reader-action@v1
      #continue-on-error: true
      with:
        path: "acceptance/target/site/serenity/summary.txt"
        
    - name: Set slack icon
      id: setIcon
      if: ${{ inputs.SLACK_WEBHOOK_QA }}!='' && always()
      run: |
        if [ ${{env.TESTS_STATUS}} = "success" ]; then
          echo "SLACK_ICON=white_check_mark" >> $GITHUB_OUTPUT
        else
          echo "SLACK_ICON=warning" >> $GITHUB_OUTPUT
        fi
      shell: bash

      #App message. See https://app.slack.com/block-kit-builder
    - name: Send after-test Slack notification
      id: slack-after-test
      if: ${{ inputs.SLACK_WEBHOOK_QA }}!='' && always()
      uses: slackapi/slack-github-action@v1
      with:
        payload: |
          {
          "text": "Test results",
          "icon_emoji": ":${{steps.setIcon.outputs.SLACK_ICON}}:",
          "channel": "logging-${{inputs.ENVIRONMENT_NAME}}" ,
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": ":${{steps.setIcon.outputs.SLACK_ICON}}: Acceptance tests for ${{inputs.RELEASE_CODENAME}} in ${{inputs.ENVIRONMENT_NAME}} have finished with ${{env.TESTS_STATUS}}!"
              }
            },
            {
            "type": "context",
            "elements": [
              {
                "type": "image",
                "image_url": "${{inputs.CUSTOM_IMAGE}}",
                "alt_text": "tests icon"
              },
              {
                "type": "plain_text",
                "text": "Tests",
                "emoji": true
              }
            ]
          },
            {
              "type": "section",
              "text": {
                "type": "plain_text",
                "text": ${{ toJSON(steps.tests-summary.outputs.contents) }}
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "<${{ steps.publish-report.outputs.deploy-url }}|Check out full results>"
              }
            },
            {
            "type": "divider"
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "PR/commit: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "Action run: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
              }
            }
          ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.SLACK_WEBHOOK_QA }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    - name: Fail the build if any test has failed
      if: ${{env.TESTS_STATUS != 'success'}} 
      uses: actions/github-script@v6
      with:
        script: |
          core.setFailed('Some tests failed!')

branding:
  icon: 'check-circle'
  color: 'green'